import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Link from "next/link";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const response = await fetch(`${process.env.API_URL}/settings/navigation`, {
    cache: "no-store",
  });

  if (!response.ok) {
    throw new Error("Failed to fetch settings");
  }

  const { data }: { data: NavigationSettings } = await response.json();

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <header className="border-b">
          <div className="container mx-auto flex justify-between items-center">
            <div>Slate Theme</div>
            <nav className="py-4 flex justify-end gap-5">
              {data.header_primary?.map(({ value }, i) => {
                return (
                  <Link key={i} href={value.link}>
                    {value.title}
                  </Link>
                );
              })}
            </nav>
          </div>
        </header>
        {children}
      </body>
    </html>
  );
}

interface NavigationSettings {
  header_primary?: LinkFrame[] | null;
}

type LinkFrame = {
  id: string;
  order: string;
  children?: Link[] | null;
  value: Link;
};

type Link = {
  type: string;
  title: string;
  link: string;
  target: string;
};
